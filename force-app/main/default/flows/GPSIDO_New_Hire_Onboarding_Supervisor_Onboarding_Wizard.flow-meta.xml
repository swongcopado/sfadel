<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <actionCalls>
        <description>Create and assign an onboarding task to the new hire.</description>
        <name>actionCreateAccessibilityWizardTask</name>
        <label>Create Accessibility Wizard Task</label>
        <locationX>4695</locationX>
        <locationY>1756</locationY>
        <actionName>Contact.New_Onboarding_Task</actionName>
        <actionType>quickAction</actionType>
        <connector>
            <targetReference>updateMarkWizardComplete</targetReference>
        </connector>
        <faultConnector>
            <targetReference>updateMarkWizardComplete</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>Description</name>
            <value>
                <stringValue>You are invited to complete the Accessibility Wizard in order to request any reasonable accommodations.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>ActivityDate</name>
            <value>
                <elementReference>varAccessibilityWizardTaskDueDate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Onboarding_Task_Type__c</name>
            <value>
                <stringValue>General Task</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Priority</name>
            <value>
                <stringValue>High</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>contextId</name>
            <value>
                <elementReference>getContactRecord.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Subject</name>
            <value>
                <stringValue>Complete the Accessibility Wizard</stringValue>
            </value>
        </inputParameters>
        <nameSegment>Contact.New_Onboarding_Task</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>50.0</apiVersion>
    <assignments>
        <name>assignAddCaseToColl01</name>
        <label>Add Case to Coll</label>
        <locationX>2429</locationX>
        <locationY>925</locationY>
        <assignmentItems>
            <assignToReference>varCasesToCreate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varCaseToAdd</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>decDeviceMobilePhone</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assignAddCaseToColl02</name>
        <label>Add Case to Coll</label>
        <locationX>2429</locationX>
        <locationY>558</locationY>
        <assignmentItems>
            <assignToReference>varCasesToCreate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varCaseToAdd</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>decDeviceMobilePhone</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assignAddCaseToColl03</name>
        <label>Add Case to Coll</label>
        <locationX>2862</locationX>
        <locationY>927</locationY>
        <assignmentItems>
            <assignToReference>varCasesToCreate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varCaseToAdd</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>decDeviceDeskPhone</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assignAddCaseToColl05</name>
        <label>Add Case to Coll</label>
        <locationX>3530</locationX>
        <locationY>874</locationY>
        <assignmentItems>
            <assignToReference>varCasesToCreate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varCaseToAdd</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>assignCountDeviceCases</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assignCountDeviceCases</name>
        <label>Count Device Cases</label>
        <locationX>3530</locationX>
        <locationY>721</locationY>
        <assignmentItems>
            <assignToReference>varCountDeviceCases</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>varCasesToCreate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>decCreateDeviceCases</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assignCreateCaseDeskPhone</name>
        <label>Create Case - Desk Phone</label>
        <locationX>3389</locationX>
        <locationY>874</locationY>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Employee__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Employee_Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The New Hire requires the requested device (see Requested Product field).</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Origin</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New Hire Onboarding Wizard</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getQueueITHelpDesk.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getRecordTypeITCase.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Requested_Product__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getProductDeskPhone.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>formulaCaseSubjectDeskPhone</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>assignAddCaseToColl05</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assignCreateCaseDesktop</name>
        <label>Create Case - Desktop</label>
        <locationX>2280</locationX>
        <locationY>925</locationY>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Employee__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Employee_Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The New Hire requires the requested device (see Requested Product field).</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Origin</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New Hire Onboarding Wizard</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getQueueITHelpDesk.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getRecordTypeITCase.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Requested_Product__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>input04_Desktop</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>formulaCaseSubjectDesktop</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>assignAddCaseToColl01</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assignCreateCaseLaptop</name>
        <label>Create Case - Laptop</label>
        <locationX>2291</locationX>
        <locationY>558</locationY>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Employee__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Employee_Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The New Hire requires the requested device (see Requested Product field).</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Origin</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New Hire Onboarding Wizard</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getQueueITHelpDesk.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getRecordTypeITCase.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Requested_Product__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>input04_Laptop</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>formulaCaseSubjectLaptop</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>assignAddCaseToColl02</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assignCreateCaseMobilePhone</name>
        <label>Create Case - Mobile Phone</label>
        <locationX>2721</locationX>
        <locationY>927</locationY>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Employee__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Employee_Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The New Hire requires the requested device (see Requested Product field).</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Origin</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New Hire Onboarding Wizard</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getQueueITHelpDesk.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getRecordTypeITCase.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Requested_Product__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>input04_MobilePhone</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCaseToAdd.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>formulaCaseSubjectMobilePhone</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>assignAddCaseToColl03</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Create_Collections</name>
        <label>Create Collections</label>
        <locationX>283</locationX>
        <locationY>617</locationY>
        <assignmentItems>
            <assignToReference>EmployeeIcon</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>action:add_contact</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmployeeIdList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_New_Hires_2.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmployeeName</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_New_Hires_2.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmployeeTitle</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Title Placeholder In Loop Assignment</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>employeeTileContent</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>formulaEmployeeTileContent</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_New_Hires_2</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Create_Collections_0</name>
        <label>Create Collections</label>
        <locationX>184</locationX>
        <locationY>249</locationY>
        <assignmentItems>
            <assignToReference>ContactName</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>NewEmployeeRecord.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ContactTitle</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>NewEmployeeRecord.Title</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ContactIcon</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>action:add_contact</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ContactIdList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>NewEmployeeRecord.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ContactTileContent</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>formulaContactTileContent</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmployeeIcon</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>action:add_contact</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmployeeIdList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_New_Hires_2.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmployeeName</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_New_Hires_2.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmployeeTitle</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>Title Placeholder In Loop Assignment</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>employeeTileContent</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>formulaEmployeeTileContent</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Define_Email_Request_Case</name>
        <label>Define Email Request Case</label>
        <locationX>4351</locationX>
        <locationY>1270</locationY>
        <assignmentItems>
            <assignToReference>EmailCaseRequest.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getRecordTypeITAccessCase.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmailCaseRequest.Employee__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Employee_Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmailCaseRequest.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Access Request:  Email Account</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmailCaseRequest.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Create New Hire email box in mail server</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmailCaseRequest.Origin</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New Hire Onboarding Wizard</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>EmailCaseRequest.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getQueueITHelpDesk.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Email_Request_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Define_Security_Profile</name>
        <label>Define Security Profile Case</label>
        <locationX>4048</locationX>
        <locationY>1270</locationY>
        <assignmentItems>
            <assignToReference>AccessCaseRequest.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Access Request:  Network Profile ID</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AccessCaseRequest.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Request for the creation of a New Hire Access Profile ID based on the existing User profile</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AccessCaseRequest.Core_System_Access_User__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varSystemAccessUserId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AccessCaseRequest.Employee__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Employee_Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AccessCaseRequest.Origin</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New Hire Onboarding Wizard</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AccessCaseRequest.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getRecordTypeITAccessCase.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AccessCaseRequest.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getQueueITHelpDesk.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Case_Access_Request</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>chBlankNone</name>
        <choiceText>-- None --</choiceText>
        <dataType>String</dataType>
    </choices>
    <choices>
        <name>chDefaultDutyLocation</name>
        <choiceText>{!getContactRecord.Duty_Location__c}</choiceText>
        <dataType>String</dataType>
        <value>
            <elementReference>getContactRecord.Duty_Location__c</elementReference>
        </value>
    </choices>
    <choices>
        <name>chNo</name>
        <choiceText>No</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>false</stringValue>
        </value>
    </choices>
    <choices>
        <name>chNotRequired</name>
        <choiceText>Not Required</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Not Required</stringValue>
        </value>
    </choices>
    <choices>
        <name>choiceComputerNo</name>
        <choiceText>No</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>ComputerNo</stringValue>
        </value>
    </choices>
    <choices>
        <name>choiceComputerYesDesktop</name>
        <choiceText>Yes - Desktop</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>ComputerYesDesktop</stringValue>
        </value>
    </choices>
    <choices>
        <name>choiceComputerYesLaptop</name>
        <choiceText>Yes - Laptop</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>ComputerYesLaptop</stringValue>
        </value>
    </choices>
    <choices>
        <name>choiceStepOrRateBlank</name>
        <choiceText>--Select--</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue></stringValue>
        </value>
    </choices>
    <choices>
        <name>chYes</name>
        <choiceText>Yes</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>true</stringValue>
        </value>
    </choices>
    <decisions>
        <name>Check_for_Employee_Contact_ID</name>
        <label>Check for Employee Contact ID</label>
        <locationX>671</locationX>
        <locationY>355</locationY>
        <defaultConnector>
            <targetReference>List_of_New_Hires</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Contact Id Provided</defaultConnectorLabel>
        <rules>
            <name>ContactProvided</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>recordId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Employee_Record</targetReference>
            </connector>
            <label>Contact Provided</label>
        </rules>
    </decisions>
    <decisions>
        <name>decCreateDeviceCases</name>
        <label>Create Device Cases?</label>
        <locationX>3676</locationX>
        <locationY>723</locationY>
        <defaultConnector>
            <targetReference>getRecordTypeITAccessCase</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Skip</defaultConnectorLabel>
        <rules>
            <name>outCreateDeviceCasesYes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCountDeviceCases</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>createDeviceRequestCases</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>decDeviceComputer</name>
        <label>Computer Required?</label>
        <locationX>2135</locationX>
        <locationY>729</locationY>
        <defaultConnector>
            <targetReference>decDeviceMobilePhone</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Skip</defaultConnectorLabel>
        <rules>
            <name>outDeviceComputerDesktop</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>input04_ComputerNeeded</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>choiceComputerYesDesktop</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>input04_Desktop</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getProductDesktop</targetReference>
            </connector>
            <label>Desktop</label>
        </rules>
        <rules>
            <name>outDeviceComputerLaptop</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>input04_ComputerNeeded</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>choiceComputerYesLaptop</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>input04_Laptop</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getProductLaptop</targetReference>
            </connector>
            <label>Laptop</label>
        </rules>
    </decisions>
    <decisions>
        <name>decDeviceDeskPhone</name>
        <label>Desk Phone Required?</label>
        <locationX>3137</locationX>
        <locationY>730</locationY>
        <defaultConnector>
            <targetReference>assignCountDeviceCases</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Skip</defaultConnectorLabel>
        <rules>
            <name>outDeviceDeskPhone</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>input04_DeskPhoneNeeded</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>chYes</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getProductDeskPhone</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>decDeviceMobilePhone</name>
        <label>Mobile Phone Required?</label>
        <locationX>2492</locationX>
        <locationY>730</locationY>
        <defaultConnector>
            <targetReference>decDeviceDeskPhone</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Skip</defaultConnectorLabel>
        <rules>
            <name>outDeviceMobilePhone</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>input04_MobilePhoneNeeded</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>chYes</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>input04_MobilePhone</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getProductMobilePhone</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>decInviteToAccessibilityWizard</name>
        <label>Invite to Accessibility Wizard?</label>
        <locationX>4688</locationX>
        <locationY>1515</locationY>
        <defaultConnector>
            <targetReference>updateMarkWizardComplete</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Skip</defaultConnectorLabel>
        <rules>
            <name>outInviteAccessibilityWizardYes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>input05_AccessibilityWizardInvite</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>actionCreateAccessibilityWizardTask</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <name>listNewHireOrientationSessions</name>
        <dataType>String</dataType>
        <displayField>Start_Date__c</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Course__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getNewHireOrientationCourse.Id</elementReference>
            </value>
        </filters>
        <object>Course_Session__c</object>
        <sortField>Start_Date__c</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>listProductDesktopComputer</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Family</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Desktop Computer</stringValue>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Product2</object>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>listProductLaptopComputer</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Family</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Laptop Computer</stringValue>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Product2</object>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>listProductMobilePhone</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Family</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Mobile Phone</stringValue>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Product2</object>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>listProductRadio</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Family</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Radio</stringValue>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Product2</object>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>listStepOrRate</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Step_or_Rate__c</picklistField>
        <picklistObject>Contact</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>picklistEmploymentType</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>EmploymentType</picklistField>
        <picklistObject>Employee</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>plNewHireList</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>New_Hire_Manager_Flow_Complete__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Employee_Record_Type.Id</elementReference>
            </value>
        </filters>
        <limit>10</limit>
        <object>Contact</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <name>formulaCaseSubjectDeskPhone</name>
        <dataType>String</dataType>
        <expression>&quot;Device Request: &quot; &amp; {!getProductDeskPhone.Name}</expression>
    </formulas>
    <formulas>
        <name>formulaCaseSubjectDesktop</name>
        <dataType>String</dataType>
        <expression>&quot;Device Request: &quot; &amp; {!getProductDesktop.Name}</expression>
    </formulas>
    <formulas>
        <name>formulaCaseSubjectLaptop</name>
        <dataType>String</dataType>
        <expression>&quot;Device Request: &quot; &amp; {!getProductLaptop.Name}</expression>
    </formulas>
    <formulas>
        <name>formulaCaseSubjectMobilePhone</name>
        <dataType>String</dataType>
        <expression>&quot;Device Request: &quot; &amp; {!getProductMobilePhone.Name}</expression>
    </formulas>
    <formulas>
        <name>formulaContactTileContent</name>
        <dataType>String</dataType>
        <expression>&quot;&lt;div style=&apos;display:none;&apos;&gt;|&quot; &amp; {!NewEmployeeRecord.Id} &amp; &quot;|&lt;/div&gt;&lt;span class=&apos;slds-text-heading_medium&apos;&gt;&quot; &amp;{!NewEmployeeRecord.FirstName} &amp; &quot;&lt;br/&gt;&quot; &amp; {!NewEmployeeRecord.LastName} &amp; &quot;&lt;/span&gt;&quot;</expression>
    </formulas>
    <formulas>
        <name>formulaEmployeeTileContent</name>
        <dataType>String</dataType>
        <expression>&quot;&lt;div style=&apos;display:none;&apos;&gt;|&quot; &amp; {!Loop_New_Hires_2.Id} &amp; &quot;|&lt;/div&gt;&lt;span class=&apos;slds-text-heading_medium&apos;&gt;&quot; &amp;{!Loop_New_Hires_2.Name} &amp; &quot;&lt;/span&gt;&quot;</expression>
    </formulas>
    <formulas>
        <name>varAccessibilityWizardTaskDueDate</name>
        <dataType>Date</dataType>
        <expression>TODAY()+5</expression>
    </formulas>
    <formulas>
        <name>varLabelForInput02JobStep</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK(TEXT({!getContactRecord.Grade_or_Level__c}))), &quot;Step or Rate (for &quot; &amp; TEXT({!getContactRecord.Position_Current__r.Pay_Plan__c}) &amp; &quot;-&quot; &amp; TEXT({!getContactRecord.Grade_or_Level__c}) &amp; &quot;):&quot;,&quot;Step or Rate:&quot;)</expression>
    </formulas>
    <interviewLabel>GPSIDO New Hire Onboarding - Supervisor Onboarding Wizard {!$Flow.CurrentDateTime}</interviewLabel>
    <label>GPSIDO New Hire Onboarding - Supervisor Onboarding Wizard</label>
    <loops>
        <name>Loop_New_Hires_2</name>
        <label>Loop New Hires 2</label>
        <locationX>535</locationX>
        <locationY>617</locationY>
        <collectionReference>List_of_New_Hires</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Create_Collections</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>screen01</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>Create_Case_Access_Request</name>
        <label>Create Case Access Request</label>
        <locationX>4179</locationX>
        <locationY>1270</locationY>
        <connector>
            <targetReference>Define_Email_Request_Case</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Define_Email_Request_Case</targetReference>
        </faultConnector>
        <inputReference>AccessCaseRequest</inputReference>
    </recordCreates>
    <recordCreates>
        <name>Create_Email_Request_Case</name>
        <label>Create Email Request Case</label>
        <locationX>4475</locationX>
        <locationY>1270</locationY>
        <connector>
            <targetReference>updateMarkWizardComplete</targetReference>
        </connector>
        <faultConnector>
            <targetReference>updateMarkWizardComplete</targetReference>
        </faultConnector>
        <inputReference>EmailCaseRequest</inputReference>
    </recordCreates>
    <recordCreates>
        <name>createDeviceRequestCases</name>
        <label>Create Device Request Cases</label>
        <locationX>3853</locationX>
        <locationY>721</locationY>
        <connector>
            <targetReference>getRecordTypeITAccessCase</targetReference>
        </connector>
        <faultConnector>
            <targetReference>getRecordTypeITAccessCase</targetReference>
        </faultConnector>
        <inputReference>varCasesToCreate</inputReference>
    </recordCreates>
    <recordLookups>
        <name>Get_Employee_Record</name>
        <label>Get Employee Record</label>
        <locationX>914</locationX>
        <locationY>347</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>screen02</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Employee</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Employee_Record_Type</name>
        <label>Get Employee Record Type</label>
        <locationX>182</locationX>
        <locationY>92</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Employee</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Contact</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the employee contact record information</description>
        <name>getContactRecord</name>
        <label>Get Contact Record</label>
        <locationX>995</locationX>
        <locationY>50</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getNewHireOrientationCourse</name>
        <label>Get New Hire Orientation Course</label>
        <locationX>1348</locationX>
        <locationY>538</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>screen06</targetReference>
        </connector>
        <faultConnector>
            <targetReference>getRecordTypeITCase</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Title__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>New Hire Orientation</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Course__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getProductDeskPhone</name>
        <label>Get Product - Desk Phone</label>
        <locationX>3248</locationX>
        <locationY>874</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assignCreateCaseDeskPhone</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Family</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Desk Phone</stringValue>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Product2</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getProductDesktop</name>
        <label>Get Product Desktop</label>
        <locationX>2142</locationX>
        <locationY>925</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assignCreateCaseDesktop</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>input04_Desktop</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Product2</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getProductLaptop</name>
        <label>Get Product Laptop</label>
        <locationX>2144</locationX>
        <locationY>558</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assignCreateCaseLaptop</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>input04_Laptop</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Product2</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getProductMobilePhone</name>
        <label>Get Product - Mobile Phone</label>
        <locationX>2579</locationX>
        <locationY>927</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assignCreateCaseMobilePhone</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>input04_MobilePhone</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Product2</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getQueueITHelpDesk</name>
        <label>Get Queue - IT Help Desk</label>
        <locationX>1787</locationX>
        <locationY>727</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>screen04</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>HR_Onboarding</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the IT Access Case Record Type</description>
        <name>getRecordTypeITAccessCase</name>
        <label>Get Record Type - IT Access Case</label>
        <locationX>3773</locationX>
        <locationY>1270</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>screen07</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>IT</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the record type IT for the case record type &quot;IT Case Requests&quot;</description>
        <name>getRecordTypeITCase</name>
        <label>Get Record Type - IT Case</label>
        <locationX>1620</locationX>
        <locationY>727</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getQueueITHelpDesk</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>IT</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>List_of_New_Hires</name>
        <label>List of New Hires</label>
        <locationX>499</locationX>
        <locationY>472</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_New_Hires_2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>New_Hire_Manager_Flow_Complete__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>EmployeeStatus</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>New-Hire</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Employee</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Update the employee record incase there were changes needed</description>
        <name>Update_Employee_Record</name>
        <label>Update Employee Record</label>
        <locationX>1348</locationX>
        <locationY>323</locationY>
        <connector>
            <targetReference>getNewHireOrientationCourse</targetReference>
        </connector>
        <faultConnector>
            <targetReference>getNewHireOrientationCourse</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Employee_Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>LocationId</field>
            <value>
                <elementReference>input03_DutyStation.recordId</elementReference>
            </value>
        </inputAssignments>
        <object>Employee</object>
    </recordUpdates>
    <recordUpdates>
        <description>Update the employee record incase there were changes needed</description>
        <name>Update_Employee_Record_0</name>
        <label>Update Employee Record</label>
        <locationX>1303</locationX>
        <locationY>63</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getContactRecord.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Duty_Station__c</field>
            <value>
                <elementReference>input03_DutyStation.recordId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Email</field>
            <value>
                <elementReference>input02_Email</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Entry_on_Duty__c</field>
            <value>
                <elementReference>input02_StartDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>FirstName</field>
            <value>
                <elementReference>input02_FirstName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>LastName</field>
            <value>
                <elementReference>input02_LastName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingCity</field>
            <value>
                <elementReference>input03_City</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingPostalCode</field>
            <value>
                <elementReference>input03_PostalCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingState</field>
            <value>
                <elementReference>input03_State</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingStreet</field>
            <value>
                <elementReference>input03_StreetAddress</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ReportsToId</field>
            <value>
                <elementReference>varReportsToId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Step_or_Rate__c</field>
            <value>
                <elementReference>input02_JobStep</elementReference>
            </value>
        </inputAssignments>
        <object>Contact</object>
    </recordUpdates>
    <recordUpdates>
        <description>Update the employee record incase there were changes needed</description>
        <name>updateMarkWizardComplete</name>
        <label>Mark Wizard Complete</label>
        <locationX>5086</locationX>
        <locationY>1971</locationY>
        <connector>
            <targetReference>Run_New_Hire_Onboarding_Autolaunch_Employee_Pre_Onboarding_Tasks</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Employee_Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>New_Hire_Manager_Flow_Complete__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Employee</object>
    </recordUpdates>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <screens>
        <name>screen01</name>
        <label>New Hire List</label>
        <locationX>738</locationX>
        <locationY>620</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Check_for_Employee_Contact_ID</targetReference>
        </connector>
        <fields>
            <name>title01</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 18px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;Welcome to the New Hire Onboarding Wizard!&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>path01</name>
            <extensionName>c:GPSFlowProgressIndicator</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>steps</name>
                <value>
                    <elementReference>varPath</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>currentStep</name>
                <value>
                    <stringValue>Select New Hire</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>text01a</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 16px; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;To get started, select one of your New Hires:&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>newHireTitles</name>
            <extensionName>FDGPack:GilmoreLabs_FlowTileGrid</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>tileSize</name>
                <value>
                    <stringValue>medium</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>lstInput</name>
                <value>
                    <elementReference>employeeTileContent</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>recordId</assignToReference>
                <name>firstSelectedItem</name>
            </outputParameters>
        </fields>
        <fields>
            <name>text01b</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 18px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;Welcome to the New Hire Onboarding Wizard!&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 16px; color: rgb(0, 0, 0);&quot;&gt;You&apos;re all good!  You do not currently have any New Hires ready for onboarding.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>EmployeeIdList</leftValueReference>
                    <operator>EqualTo</operator>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>screen02</name>
        <label>New Hire Info</label>
        <locationX>1091</locationX>
        <locationY>323</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>screen03</targetReference>
        </connector>
        <fields>
            <name>title02</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 18px;&quot;&gt;New Hire Information&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>path02</name>
            <extensionName>c:GPSFlowProgressIndicator</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>steps</name>
                <value>
                    <elementReference>varPath</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>currentStep</name>
                <value>
                    <stringValue>New Hire Info</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>text02a</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 16px; background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;First, let&apos;s review some key data about {!getContactRecord.FirstName} and make any necessary updates and selections:&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>input02_FirstName</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>Get_Employee_Record.FirstName</elementReference>
            </defaultValue>
            <fieldText>First Name:</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>input02_LastName</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>Get_Employee_Record.LastName</elementReference>
            </defaultValue>
            <fieldText>Last Name:</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>input02_Email</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>Get_Employee_Record.Email</elementReference>
            </defaultValue>
            <fieldText>Email:</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>input02_ReportsTo</name>
            <extensionName>flowruntime:lookup</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fieldApiName</name>
                <value>
                    <stringValue>ManagerId</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Manager:</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectApiName</name>
                <value>
                    <stringValue>Employee</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>Get_Employee_Record.ManagerId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>varReportsToId</assignToReference>
                <name>recordId</name>
            </outputParameters>
        </fields>
        <fields>
            <name>input02_StartDate</name>
            <dataType>Date</dataType>
            <defaultValue>
                <elementReference>Get_Employee_Record.AvailabilityStartDate</elementReference>
            </defaultValue>
            <fieldText>Availability Start Date:</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>input02_JobStep</name>
            <choiceReferences>picklistEmploymentType</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>choiceStepOrRateBlank</elementReference>
            </defaultValue>
            <fieldText>Employment Type</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>screen03</name>
        <label>Work Location</label>
        <locationX>1218</locationX>
        <locationY>323</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Update_Employee_Record</targetReference>
        </connector>
        <fields>
            <name>title03</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 18px;&quot;&gt;Work Location&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>path03</name>
            <extensionName>c:GPSFlowProgressIndicator</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>steps</name>
                <value>
                    <elementReference>varPath</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>currentStep</name>
                <value>
                    <stringValue>Work Location</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>text03a</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255); font-size: 16px;&quot;&gt;Next, let&apos;s confirm {!Get_Employee_Record.FirstName}&apos;s assigned work location:&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>input03_DutyStation</name>
            <extensionName>flowruntime:lookup</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fieldApiName</name>
                <value>
                    <stringValue>LocationId</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Location</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectApiName</name>
                <value>
                    <stringValue>Employee</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>Get_Employee_Record.LocationId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>text03b</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Address of {!Get_Employee_Record.FirstName}&apos;s specific office location:&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>input03_StreetAddress</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>Get_Employee_Record.Location.VisitorAddress.Street</elementReference>
            </defaultValue>
            <fieldText>Street Address:</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>input03_City</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>Get_Employee_Record.Location.VisitorAddress.City</elementReference>
            </defaultValue>
            <fieldText>City:</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>input03_State</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>Get_Employee_Record.Location.VisitorAddress.State</elementReference>
            </defaultValue>
            <fieldText>State:</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>input03_PostalCode</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>Get_Employee_Record.Location.VisitorAddress.PostalCode</elementReference>
            </defaultValue>
            <fieldText>Zip Code:</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>screen04</name>
        <label>Device Selection</label>
        <locationX>1959</locationX>
        <locationY>727</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>decDeviceComputer</targetReference>
        </connector>
        <fields>
            <name>title04</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 18px;&quot;&gt;Device Selection&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>path04</name>
            <extensionName>c:GPSFlowProgressIndicator</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>steps</name>
                <value>
                    <elementReference>varPath</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>currentStep</name>
                <value>
                    <stringValue>Device Selection</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>text04a</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255); font-size: 16px;&quot;&gt;Now it&apos;s time to select the technology {!Get_Employee_Record.FirstName} will need.  Please note:  other devices or supplies may be auto-requested by the wizard based on their position:&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>input04_ComputerNeeded</name>
            <choiceReferences>choiceComputerYesDesktop</choiceReferences>
            <choiceReferences>choiceComputerYesLaptop</choiceReferences>
            <choiceReferences>choiceComputerNo</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>choiceComputerNo</defaultSelectedChoiceReference>
            <fieldText>Will They Need a Computer?</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>input04_Desktop</name>
            <choiceReferences>listProductDesktopComputer</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Select a Desktop:</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>input04_ComputerNeeded</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>choiceComputerYesDesktop</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>input04_Laptop</name>
            <choiceReferences>listProductLaptopComputer</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Select a Laptop:</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>input04_ComputerNeeded</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>choiceComputerYesLaptop</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>input04_MobilePhoneNeeded</name>
            <choiceReferences>chYes</choiceReferences>
            <choiceReferences>chNo</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>chNo</defaultSelectedChoiceReference>
            <fieldText>Will They Need a Mobile Phone?</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>input04_MobilePhone</name>
            <choiceReferences>listProductMobilePhone</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Select a Mobile Phone:</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>input04_MobilePhoneNeeded</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>chYes</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>input04_DeskPhoneNeeded</name>
            <choiceReferences>chYes</choiceReferences>
            <choiceReferences>chNo</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>chNo</defaultSelectedChoiceReference>
            <fieldText>Will They Need a Desk Phone?</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>screen05</name>
        <label>Assistive Technology Needs</label>
        <locationX>4364</locationX>
        <locationY>1513</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>decInviteToAccessibilityWizard</targetReference>
        </connector>
        <fields>
            <name>title05</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 18px;&quot;&gt;Assistive Technology Needs&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>path05</name>
            <extensionName>c:GPSFlowProgressIndicator</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>steps</name>
                <value>
                    <elementReference>varPath</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>currentStep</name>
                <value>
                    <stringValue>Assistive Technology Needs</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>text05a</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;As an inclusive workplace,  we provide tools and reasonable accommodations to our employees with disabilities to help them with their work.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;If &lt;/span&gt;&lt;span style=&quot;font-size: 16px; background-color: rgb(255, 255, 255);&quot;&gt;{!getContactRecord.FirstName}&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt; has informed you of a disability, or if they have requested reasonable accommodations during the hiring process, you can invite them to complete the Accessibility Wizard.  Reasonable accommodation requests can be submitted at any time during onboarding or active employment.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 16px;&quot;&gt;To invite &lt;/b&gt;&lt;b style=&quot;font-size: 16px; background-color: rgb(255, 255, 255);&quot;&gt;{!getContactRecord.FirstName}&lt;/b&gt;&lt;b style=&quot;font-size: 16px;&quot;&gt; to complete the Accessibility Wizard, check the box below:&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>input05_AccessibilityWizardInvite</name>
            <dataType>Boolean</dataType>
            <fieldText>Yes, please invite them to complete the Accessibility Wizard</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>screen06</name>
        <label>New Hire Orientation</label>
        <locationX>1485</locationX>
        <locationY>529</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>flowEnrollInNewHireOrientation</targetReference>
        </connector>
        <fields>
            <name>title06</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 18px; background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;New Hire Orientation Session&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>path06</name>
            <extensionName>c:GPSFlowProgressIndicator</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>steps</name>
                <value>
                    <elementReference>varPath</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>currentStep</name>
                <value>
                    <stringValue>Orientation Dates</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>text06a</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;All of our new employees attend an orientation session as part of their first month on the job.  Orientation includes (1) an agency-wide session and (2) a bureau-specific breakout session.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;(1) The agency-wide session focuses on introducing your new hire to:&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;The agency and our core mission;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;Key employee-facing resources, systems, and supporting organizations; and&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;Critical policies and procedures that all agency employees need to know&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;(2) The bureau-specific breakout. session covers similar topics at a bureau level, as well as additional information as defined and tailored for the new hire&apos;s specific mission area.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 16px;&quot;&gt;To reserve &lt;/b&gt;&lt;b style=&quot;font-size: 16px; color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;{!getContactRecord.FirstName}&lt;/b&gt;&lt;b style=&quot;font-size: 16px;&quot;&gt;&apos;s spot in an upcoming orientation session, select a date below:&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>input06_NewHireOrientationDate</name>
            <choiceReferences>listNewHireOrientationSessions</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Available dates:</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>screen07</name>
        <label>System Access</label>
        <locationX>3911</locationX>
        <locationY>1270</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Define_Security_Profile</targetReference>
        </connector>
        <fields>
            <name>title07</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 18px;&quot;&gt;System Access&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>path07</name>
            <extensionName>c:GPSFlowProgressIndicator</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>steps</name>
                <value>
                    <elementReference>varPath</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>currentStep</name>
                <value>
                    <stringValue>System Access</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>text07a</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;At our agency, we can grant basic network/system access by cloning another user.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 16px;&quot;&gt;Please select an existing employee we should clone to set up {!Get_Employee_Record.FirstName}&apos;s initial network profile:&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>input07_SystemAccessUser</name>
            <extensionName>flowruntime:lookup</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fieldApiName</name>
                <value>
                    <stringValue>Core_System_Access_User__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Select an existing employee:</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectApiName</name>
                <value>
                    <stringValue>Case</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>varSystemAccessUserId</assignToReference>
                <name>recordId</name>
            </outputParameters>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>screen08</name>
        <label>Confirmation</label>
        <locationX>5491</locationX>
        <locationY>1916</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>title08</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 18px;&quot;&gt;Finished!&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>path08</name>
            <extensionName>c:GPSFlowProgressIndicator</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>steps</name>
                <value>
                    <elementReference>varPath</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>currentStep</name>
                <value>
                    <stringValue>Finished</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>text08a</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;The New Hire Wizard has been completed for {!Get_Employee_Record.FirstName}!  All related data updates and requests have been submitted on your behalf.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 16px;&quot;&gt;You may now exit the New Hire Wizard.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>611</locationX>
        <locationY>117</locationY>
        <connector>
            <targetReference>Check_for_Employee_Contact_ID</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <description>Creates cases to request any products that are standard issue for this employee contact&apos;s Position (called Position Assets).  See Position&apos;s Postion Assets related list.</description>
        <name>flowCreateCasesFromPositionAssets</name>
        <label>Create Cases from Position Assets</label>
        <locationX>3573</locationX>
        <locationY>1102</locationY>
        <connector>
            <targetReference>getRecordTypeITAccessCase</targetReference>
        </connector>
        <flowName>EmployeeCreateCasesFromPositionAssetsFlow</flowName>
        <inputAssignments>
            <name>contactId</name>
            <value>
                <elementReference>getContactRecord.Id</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <name>flowEnrollInNewHireOrientation</name>
        <label>Enroll in New Hire Orientation</label>
        <locationX>1620</locationX>
        <locationY>529</locationY>
        <connector>
            <targetReference>getRecordTypeITCase</targetReference>
        </connector>
        <flowName>LearningEnrollEmployeeInACourseSessionFlow</flowName>
        <inputAssignments>
            <name>contactId</name>
            <value>
                <elementReference>getContactRecord.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>employeeId</name>
            <value>
                <elementReference>Get_Employee_Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>sessionId</name>
            <value>
                <elementReference>input06_NewHireOrientationDate</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>Run_New_Hire_Onboarding_Autolaunch_Employee_Pre_Onboarding_Tasks</name>
        <label>Run New Hire Onboarding Autolaunch - Employee Pre-Onboarding Tasks</label>
        <locationX>5269</locationX>
        <locationY>1931</locationY>
        <connector>
            <targetReference>screen08</targetReference>
        </connector>
        <flowName>New_Hire_Onboarding_Autolaunch_Employee_Pre_Onboarding_Tasks</flowName>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>Get_Employee_Record.Id</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <description>Case record for access profile id</description>
        <name>AccessCaseRequest</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>ContactIcon</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ContactIdList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ContactName</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ContactTileContent</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ContactTitle</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>EmailCaseRequest</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>EmployeeIcon</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>EmployeeIdList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>EmployeeName</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>employeeTileContent</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>EmployeeTitle</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>EquipmentCase</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <description>Updated values from primary screen</description>
        <name>NewEmployeeRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varCasesToCreate</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>varCaseToAdd</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>varCountDeviceCases</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varEmptyProduct</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Product2</objectType>
    </variables>
    <variables>
        <name>varPath</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Select New Hire,New Hire Info,Work Location,Orientation Dates,Device Selection,System Access,Assistive Technology Needs,Finished</stringValue>
        </value>
    </variables>
    <variables>
        <name>varReportsToId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>The user ID to replicate for Core System Access</description>
        <name>varSystemAccessUserId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
