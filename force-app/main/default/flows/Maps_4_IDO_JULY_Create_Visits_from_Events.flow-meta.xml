<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>Assign_Cannabis_Inspection</name>
        <label>Assign Cannabis Inspection</label>
        <locationX>1106</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>InspectionType</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Cannabis Dispensary Inspection</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Visit_Type</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Deck_Inspection</name>
        <label>Assign Deck Inspection</label>
        <locationX>842</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>InspectionType</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Deck Inspection</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Visit_Type</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Food_Establishment</name>
        <label>Assign Food Establishment</label>
        <locationX>314</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>InspectionType</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Food Safety</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Visit_Type</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Petroleum_Tank</name>
        <label>Assign Petroleum Tank</label>
        <locationX>578</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>InspectionType</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Storage Tank Inspection</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Visit_Type</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Salon_Inspection</name>
        <label>Assign Salon Inspection</label>
        <locationX>50</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>InspectionType</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Salon Establishment Inspection</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Visit_Type</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>What_License_Type</name>
        <label>What License Type?</label>
        <locationX>710</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>Get_Visit_Type</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Salon_License</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Application.LicenseType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Salon Establishment License</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Salon_Inspection</targetReference>
            </connector>
            <label>Salon License</label>
        </rules>
        <rules>
            <name>Food_Establishment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Application.LicenseType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Food Establishment</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Food_Establishment</targetReference>
            </connector>
            <label>Food Establishment</label>
        </rules>
        <rules>
            <name>Petroleum_Tank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Application.LicenseType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Petroleum Tank Permit</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Petroleum_Tank</targetReference>
            </connector>
            <label>Petroleum Tank</label>
        </rules>
        <rules>
            <name>Building_Permit</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Application.LicenseType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Building Permit</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Deck_Inspection</targetReference>
            </connector>
            <label>Building Permit</label>
        </rules>
        <rules>
            <name>Cannabis_License</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Application.LicenseType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Retail Dispensary</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Cannabis_Inspection</targetReference>
            </connector>
            <label>Cannabis License</label>
        </rules>
    </decisions>
    <decisions>
        <name>What_Object_Type</name>
        <label>What Object Type?</label>
        <locationX>1260</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Business_Application</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ObjectType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>0f0</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Application</targetReference>
            </connector>
            <label>Business Application</label>
        </rules>
        <rules>
            <name>Individual_Application</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ObjectType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>0iT</stringValue>
                </rightValue>
            </conditions>
            <label>Individual Application</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>ObjectType</name>
        <dataType>String</dataType>
        <expression>LEFT({!$Record.WhatId}, 3)</expression>
    </formulas>
    <interviewLabel>Maps 4 IDO (JULY) - Create Visits from Events {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Maps 4 IDO (JULY) - Create Visits from Events</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Visit</name>
        <label>Create Visit</label>
        <locationX>710</locationX>
        <locationY>1055</locationY>
        <connector>
            <targetReference>Get_Duplicate_Event</targetReference>
        </connector>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>Get_Application.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ContextId</field>
            <value>
                <elementReference>Get_Application.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PlaceId</field>
            <value>
                <elementReference>Get_Location.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PlannedVisitEndTime</field>
            <value>
                <elementReference>$Record.EndDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PlannedVisitStartTime</field>
            <value>
                <elementReference>$Record.StartDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>VisitTypeId</field>
            <value>
                <elementReference>Get_Visit_Type.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>VisitorId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <object>Visit</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordDeletes>
        <name>Delete_Duplicate_Event</name>
        <label>Delete Duplicate Event</label>
        <locationX>710</locationX>
        <locationY>1271</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Duplicate_Event.Id</elementReference>
            </value>
        </filters>
        <object>Event</object>
    </recordDeletes>
    <recordLookups>
        <name>Get_Application</name>
        <label>Get Application</label>
        <locationX>710</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Location</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>BusinessLicenseApplication</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Duplicate_Event</name>
        <label>Get Duplicate Event</label>
        <locationX>710</locationX>
        <locationY>1163</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Delete_Duplicate_Event</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Create_Visit</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Event</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Location</name>
        <label>Get Location</label>
        <locationX>710</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>What_License_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Application.Name</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Location</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Visit_Type</name>
        <label>Get Visit Type</label>
        <locationX>710</locationX>
        <locationY>947</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Visit</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>InspectionType</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>InspectionType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>1134</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>What_Object_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Location</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Event</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>InspectionType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
